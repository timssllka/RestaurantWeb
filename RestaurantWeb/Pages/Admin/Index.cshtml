@page
@using Microsoft.EntityFrameworkCore
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model RestaurantWeb.Pages.Admin.IndexModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Админ панель";
}
<div class="container-fluid">
    <div class="row">
        <!-- Левая боковая панель -->
        <div class="col-md-3 col-lg-2 sidebar p-0">
            <div class="d-flex flex-column p-4">
                <div class="decoration-element mb-5">
                    <i class="bi bi-shield-lock" style="font-size: 3rem; color: #5A4A42;"></i>
                </div>

                <a href="/admin" class="btn btn-sidebar active mb-3">
                    <i class="bi bi-speedometer2 me-2"></i>Панель управления
                </a>

                <h6 class="sidebar-section-title mt-3 mb-2 ps-2">Управление</h6>
                <a href="#users" class="btn btn-sidebar mb-2">
                    <i class="bi bi-people me-2"></i>Пользователи
                </a>
                <a href="#roles" class="btn btn-sidebar mb-2">
                    <i class="bi bi-shield me-2"></i>Роли
                </a>
                <a href="#menu" class="btn btn-sidebar mb-2">
                    <i class="bi bi-menu-button me-2"></i>Меню
                </a>
                <a href="#tables" class="btn btn-sidebar mb-2">
                    <i class="bi bi-table me-2"></i>Столы
                </a>
                <a href="#orders" class="btn btn-sidebar mb-2">
                    <i class="bi bi-receipt me-2"></i>Заказы
                </a>
                <a href="#reservations" class="btn btn-sidebar mb-2">
                    <i class="bi bi-calendar me-2"></i>Бронирования
                </a>

                <h6 class="sidebar-section-title mt-3 mb-2 ps-2">Контент</h6>
                <a href="#promotions" class="btn btn-sidebar mb-2">
                    <i class="bi bi-percent me-2"></i>Акции
                </a>
                <a href="#categories" class="btn btn-sidebar mb-2">
                    <i class="bi bi-tags me-2"></i>Категории
                </a>

                <div class="mt-auto pt-3">
                    <a href="/" class="btn btn-sidebar">
                        <i class="bi bi-arrow-left me-2"></i>На сайт
                    </a>
                </div>
            </div>
        </div>

        <!-- Основное содержимое -->
        <main class="col-md-9 col-lg-10 main-content px-4 py-4">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0" style="color: var(--peach);">
                    <i class="bi bi-shield-lock me-2"></i>Админ панель
                </h2>
                <div class="admin-welcome">
                    Добро пожаловать, <strong>@User.Identity.Name</strong>!
                </div>
            </div>

            <!-- Карточки быстрого доступа -->
            <div class="row mb-4">
                <div class="col-md-3 mb-3">
                    <div class="admin-quick-card bg-peach h-100">
                        <div class="d-flex align-items-center">
                            <div class="quick-card-icon me-3">
                                <i class="bi bi-people"></i>
                            </div>
                            <div>
                                <h5>Пользователи</h5>
                                <p class="mb-1">@Model.Context.Users.Count() аккаунтов</p>
                                <a href="#users" class="btn btn-admin-sm">Управление</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="admin-quick-card bg-sage h-100">
                        <div class="d-flex align-items-center">
                            <div class="quick-card-icon me-3">
                                <i class="bi bi-menu-button"></i>
                            </div>
                            <div>
                                <h5>Меню</h5>
                                <p class="mb-1">@Model.Context.Dishes.Count() блюд</p>
                                <a href="#menu" class="btn btn-admin-sm">Редактировать</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="admin-quick-card bg-lavender h-100">
                        <div class="d-flex align-items-center">
                            <div class="quick-card-icon me-3">
                                <i class="bi bi-receipt"></i>
                            </div>
                            <div>
                                <h5>Заказы</h5>
                                <p class="mb-1">@Model.Context.Orders.Count() всего</p>
                                <a href="#orders" class="btn btn-admin-sm">Просмотр</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="admin-quick-card bg-sky h-100">
                        <div class="d-flex align-items-center">
                            <div class="quick-card-icon me-3">
                                <i class="bi bi-percent"></i>
                            </div>
                            <div>
                                <h5>Акции</h5>
                                <p class="mb-1">@Model.Context.Promotions.Count() активных</p>
                                <a href="#promotions" class="btn btn-admin-sm">Настроить</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Раздел управления пользователями -->
            <section id="users" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-people me-2"></i>Управление пользователями
                    </h3>
                    <button class="btn btn-admin" data-bs-toggle="modal" data-bs-target="#addUserModal">
                        <i class="bi bi-plus-circle me-1"></i>Добавить
                    </button>
                </div>

                <div class="admin-table-container">
                    <table class="table admin-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Логин</th>
                                <th>Email</th>
                                <th>Роли</th>
                                <th>Статус</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Context.Users
                                                        .Include(u => u.UserRoles)
                                                        .ThenInclude(ur => ur.Role)
                                                        .OrderBy(u => u.Username))
                            {
                                <tr>
                                    <td>@user.UserId</td>
                                    <td>@user.Username</td>
                                    <td>@user.Email</td>
                                    <td>
                                        @foreach (var role in user.UserRoles.Select(ur => ur.Role))
                                        {
                                            <span class="badge bg-primary me-1">@role.RoleName</span>
                                        }
                                    </td>
                                    <td>

                                        <span class="badge @(user.IsActive ?? false ? "bg-success" : "bg-secondary")">
                                            @(user.IsActive ?? false ? "Активен" : "Неактивен")
                                        </span>
                                       
                                        
                                    </td>
                                    <td>
                                        <!-- Кнопка редактирования -->
                                        <button class="btn btn-admin-sm me-1 edit-user-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editUserModal"
                                                data-userid="@user.UserId"
                                                data-username="@user.Username"
                                                data-email="@user.Email">
                                            <i class="bi bi-pencil"></i>
                                        </button>

                                        <!-- Кнопка удаления -->
                                        <button class="btn btn-admin-sm btn-danger delete-user-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteUserModal"
                                                data-userid="@user.UserId">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Раздел управления ролями -->
            <section id="roles" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-shield me-2"></i>Управление ролями
                    </h3>
                    <button class="btn btn-admin" data-bs-toggle="modal" data-bs-target="#addRoleModal">
                        <i class="bi bi-plus-circle me-1"></i>Добавить
                    </button>
                </div>

                <div class="admin-table-container">
                    <table class="table admin-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Название</th>
                                <th>Описание</th>
                                <th>Пользователей</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var role in Model.Context.Roles
                                .Include(r => r.UserRoles)
                                .OrderBy(r => r.RoleName))
                            {
                                <tr>
                                    <td>@role.RoleId</td>
                                    <td>@role.RoleName</td>
                                    <td>@role.Description</td>
                                    <td>@role.UserRoles.Count</td>
                                    <td>
                                        <button class="btn btn-admin-sm me-1"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editRoleModal"
                                                data-id="@role.RoleId">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        @if (role.UserRoles.Count == 0)
                                        {
                                            <button class="btn btn-admin-sm btn-danger"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteRoleModal"
                                                    data-id="@role.RoleId">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Раздел управления меню -->
            <section id="menu" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-menu-button me-2"></i>Управление меню
                    </h3>
                    <div>
                        <button class="btn btn-admin me-2" data-bs-toggle="modal" data-bs-target="#addDishModal">
                            <i class="bi bi-plus-circle me-1"></i>Блюдо
                        </button>
                        <button class="btn btn-admin" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                            <i class="bi bi-tag me-1"></i>Категорию
                        </button>
                    </div>
                </div>

                <div class="admin-table-container">
                    <table class="table admin-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Название</th>
                                <th>Категория</th>
                                <th>Цена</th>
                                <th>Состав</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var dish in Model.Context.Dishes
                                .Include(d => d.Category)
                                .OrderBy(d => d.Name))
                            {
                                <tr>
                                    <td>@dish.DishId</td>
                                    <td>@dish.Name</td>
                                    <td>@dish.Category?.Name</td>
                                    <td>@dish.Price.ToString("N2") ₽</td>
                                    <td>@dish.Composition</td>
                                    <td>
                                        <button class="btn btn-admin-sm me-1"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editDishModal"
                                                data-id="@dish.DishId">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-admin-sm btn-danger"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteDishModal"
                                                data-id="@dish.DishId">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Раздел управления столами -->
            <section id="tables" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-table me-2"></i>Управление столами
                    </h3>
                    <button class="btn btn-admin" data-bs-toggle="modal" data-bs-target="#addTableModal">
                        <i class="bi bi-plus-circle me-1"></i>Добавить
                    </button>
                </div>

                <div class="row">
                    @foreach (var table in Model.Context.Tables.OrderBy(t => t.TableId))
                    {
                        <div class="col-md-4 mb-4">
                            <div class="table-card @(table.Status == "free" ? "bg-success-light" : 
                                                  table.Status == "occupied" ? "bg-danger-light" : "bg-warning-light")">
                                <div class="table-badge bg-primary">
                                    Стол #@table.TableId
                                </div>
                                <h4>@table.Type</h4>
                                <p><i class="bi bi-people"></i> Вместимость: @table.Capacity чел.</p>
                                <p><i class="bi bi-geo-alt"></i> @table.Location</p>
                                <div class="table-status mb-2">
                                    Статус: 
                                    <span class="badge @(table.Status == "free" ? "bg-success" : 
                                                      table.Status == "occupied" ? "bg-danger" : "bg-warning")">
                                        @GetTableStatus(table.Status)
                                    </span>
                                </div>
                                <div class="table-actions mt-3">
                                    <button class="btn btn-admin-sm me-1"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editTableModal"
                                            data-id="@table.TableId">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn btn-admin-sm btn-danger"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteTableModal"
                                            data-id="@table.TableId">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </section>

            <!-- Раздел управления заказами -->
            <section id="orders" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-receipt me-2"></i>Управление заказами
                    </h3>
                </div>

                <div class="admin-table-container">
                    <table class="table admin-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Время</th>
                                <th>Стол</th>
                                <th>Клиент</th>
                                <th>Сумма</th>
                                <th>Статус</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Context.Orders
                                .Include(o => o.Table)
                                .Include(o => o.Client)
                                .OrderByDescending(o => o.OrderTime)
                                .Take(20))
                            {
                                <tr>
                                    <td>@order.OrderId</td>
                                    <td>@order.OrderTime.ToString()</td>
                                    <td>@order.Table?.Location (№@order.TableId)</td>
                                    <td>@order.Client?.FullName</td>
                                    <td>@order.TotalAmount?.ToString("N2") ₽</td>
                                    <td>
                                        <span class="badge @GetOrderStatusBadgeClass(order.Status)">
                                            @GetOrderStatus(order.Status)
                                        </span>
                                    </td>
                                    <td>
                                        <a href="/Admin/OrderDetails?id=@order.OrderId" class="btn btn-admin-sm">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Раздел управления бронированиями -->
            <section id="reservations" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-calendar me-2"></i>Управление бронированиями
                    </h3>
                </div>

                <div class="admin-table-container">
                    <table class="table admin-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Дата/время</th>
                                <th>Стол</th>
                                <th>Клиент</th>
                                <th>Гостей</th>
                                <th>Статус</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var reservation in Model.Context.Reservations
                                .Include(r => r.Table)
                                .Include(r => r.Client)
                                .OrderByDescending(r => r.ReservationTime)
                                .Take(20))
                            {
                                <tr>
                                    <td>@reservation.ReservationId</td>
                                    <td>@reservation.ReservationTime.ToString("g")</td>
                                    <td>@reservation.Table?.Location (№@reservation.TableId)</td>
                                    <td>@reservation.Client?.FullName</td>
                                    <td>@reservation.GuestsNumber</td>
                                    <td>
                                        <span class="badge @GetReservationStatusBadgeClass(reservation.Status)">
                                            @GetReservationStatus(reservation.Status)
                                        </span>
                                    </td>
                                    <td>
                                        <button class="btn btn-admin-sm me-1"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editReservationModal"
                                                data-id="@reservation.ReservationId">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-admin-sm btn-danger"
                                                data-bs-toggle="modal"
                                                data-bs-target="#cancelReservationModal"
                                                data-id="@reservation.ReservationId">
                                            <i class="bi bi-x-circle"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Раздел управления акциями -->
            <section id="promotions" class="admin-section mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-percent me-2"></i>Управление акциями
                    </h3>
                    <button class="btn btn-admin" data-bs-toggle="modal" data-bs-target="#addPromotionModal">
                        <i class="bi bi-plus-circle me-1"></i>Добавить
                    </button>
                </div>

                <div class="row">
                    @foreach (var promo in Model.Context.Promotions
                        .OrderByDescending(p => p.EndDate))
                    {
                        <div class="col-md-6 mb-4">
                            <div class="promo-card @(DateTime.Parse(promo.EndDate.ToString()) < DateTime.Now ? "bg-secondary" : "bg-peach-light")">
                                <div class="promo-badge @(DateTime.Parse(promo.EndDate.ToString()) < DateTime.Now ? "bg-secondary" : "bg-success")">
                                    @(DateTime.Parse(promo.EndDate.ToString()) < DateTime.Now ? "Завершена" : "Активна")
                                </div>
                                <h4>@promo.Name</h4>
                                <p>@promo.Conditions</p>
                                <div class="promo-dates">
                                    @promo.StartDate.ToString("d") - @promo.EndDate.ToString("d")
                                </div>
                                <div class="promo-actions mt-3">
                                    <button class="btn btn-admin-sm me-1"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editPromotionModal"
                                            data-id="@promo.PromotionId">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn btn-admin-sm btn-danger"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deletePromotionModal"
                                            data-id="@promo.PromotionId">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </section>

            <!-- Раздел управления категориями -->
            <section id="categories" class="admin-section">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3 class="mb-0" style="color: var(--peach);">
                        <i class="bi bi-tags me-2"></i>Управление категориями
                    </h3>
                    <button class="btn btn-admin" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                        <i class="bi bi-plus-circle me-1"></i>Добавить
                    </button>
                </div>

                <div class="row">
                    @if(Model.DishCategories!=null)
                    @foreach (var category in Model.DishCategories.OrderBy(c => c.Name))
                    {
                        <div class="col-md-3 mb-4">
                            <div class="category-card bg-sage-light">
                                <h5>@category.Name</h5>
                                <p class="small">@(category.Description ?? "Нет описания")</p>
                                <p class="small text-muted">
                                    Блюд: @Model.Context.Dishes.Count(d => d.CategoryId == category.CategoryId)
                                </p>
                                <div class="category-actions mt-2">
                                    <button class="btn btn-admin-sm me-1"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editCategoryModal"
                                            data-id="@category.CategoryId">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    @if (Model.Context.Dishes.Count(d => d.CategoryId == category.CategoryId) == 0)
                                    {
                                        <button class="btn btn-admin-sm btn-danger"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteCategoryModal"
                                                data-id="@category.CategoryId">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </section>
        </main>
    </div>
</div>

<!-- Модальное окно добавления пользователя -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="AddUser">
                @Html.AntiForgeryToken() <!-- Обязателен! -->

                <div class="modal-header">
                    <h5 class="modal-title">Добавить пользователя</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Username" class="form-label">Имя пользователя:</label>
                        <input type="text" class="form-control" id="Username" name="Username" required />
                    </div>
                    <div class="mb-3">
                        <label for="Email" class="form-label">E-mail:</label>
                        <input type="email" class="form-control" id="Email" name="Email" required />
                    </div>
                    <div class="mb-3">
                        <label for="Password" class="form-label">Пароль:</label>
                        <input type="password" class="form-control" id="Password" name="Password" required />
                    </div>
                    <div class="mb-3">
                        <label for="Roles" class="form-label">Роли:</label>
                        <select class="form-select" id="Roles" name="Roles" multiple required>
                            @foreach (var role in Model.Context.Roles)
                            {
                                <option value="@role.RoleId">@role.RoleName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отменить</button>
                    <button type="submit" class="btn btn-primary">Создать пользователя</button>
                </div>
            </form>

        </div>
    </div>
</div>

<!-- Модальное окно редактирования пользователя -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="EditUser">
                @Html.AntiForgeryToken()
                <input type="hidden" name="UserId" id="editUserId" /> <!-- Hidden field -->
                <div class="modal-header">
                    <h5 class="modal-title">Редактирование пользователя</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editUsername" class="form-label">Имя пользователя:</label>
                        <input type="text" class="form-control" id="editUsername" name="Username" required />
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">Email:</label>
                        <input type="email" class="form-control" id="editEmail" name="Email" required />
                    </div>
                    <div class="mb-3">
                        <label for="editPassword" class="form-label">Новый пароль (оставьте пустым, если не менять):</label>
                        <input type="password" class="form-control" id="editPassword" name="NewPassword" />
                    </div>
                    <div class="mb-3">
                        <label for="editRoles" class="form-label">Роли:</label>
                        <select class="form-select" id="editRoles" name="Roles" multiple>
                            @foreach (var role in Model.Context.Roles)
                            {
                                <option value="@role.RoleId">@role.RoleName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отменить</button>
                    <button type="submit" class="btn btn-primary">Сохранить изменения</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal для удаления пользователя -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="DeleteUser">
                @Html.AntiForgeryToken()
                <input type="hidden" name="UserId" id="deleteUserId" required />
                <div class="modal-header">
                    <h5 class="modal-title">Удаление пользователя</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <p>Вы уверены, что хотите удалить пользователя?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Нет, отменить</button>
                    <button type="submit" class="btn btn-danger">Да, удалить</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Модальное окно добавления блюда -->
<div class="modal fade" id="addDishModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="AddDish" enctype="multipart/form-data">
                @Html.AntiForgeryToken();
                <div class="modal-header">
                    <h5 class="modal-title">Добавить блюдо</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Название</label>
                        <input type="text" class="form-control" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Категория</label>
                        <select class="form-select" name="CategoryId" required>
                            @foreach (var category in Model.Context.DishCategories)
                            {
                                <option value="@category.CategoryId">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Цена</label>
                        <input type="number" step="0.01" class="form-control" name="Price" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Состав</label>
                        <textarea class="form-control" name="Composition" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Изображение</label>
                        <input type="file" class="form-control" name="ImageFile" accept="image/*">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary">Сохранить</button>
                </div>
            </form>
        </div>
    </div>
</div>



@functions {
    string GetOrderStatus(string status)
    {
        return status switch
        {
            "received" => "Получен",
            "preparing" => "Готовится",
            "served" => "Подано",
            "paid" => "Оплачено",
            _ => status
        };
    }

    string GetReservationStatus(string status)
    {
        return status switch
        {
            "confirmed" => "Подтверждено",
            "canceled" => "Отменено",
            _ => status
        };
    }

    string GetTableStatus(string status)
    {
        return status switch
        {
            "free" => "Свободен",
            "occupied" => "Занят",
            "reserved" => "Забронирован",
            _ => status
        };
    }

    string GetOrderStatusBadgeClass(string status)
    {
        return status switch
        {
            "received" => "bg-warning",
            "preparing" => "bg-info",
            "served" => "bg-success",
            "paid" => "bg-secondary",
            _ => "bg-primary"
        };
    }

    string GetReservationStatusBadgeClass(string status)
    {
        return status switch
        {
            "confirmed" => "bg-success",
            "canceled" => "bg-danger",
            _ => "bg-primary"
        };
    }
}

<script>
 

    // Инициализация модальных окон для редактирования (предположительно)
    $('.edit-user-btn').on('click', function () {
        let userId = $(this).attr('data-userid');
        $.ajax({
            url: '/Admin/GetUser?id=' + userId,
            success: function (response) {
                $('#editUserId').val(response.UserId);
                $('#editUsername').val(response.Username);
                $('#editEmail').val(response.Email);
                // Дополнительные поля...
            },
            error: function () {
                alert('Ошибка загрузки данных.');
            }
        });
    });


    $(document).ready(function () {
        $('body').on('click', '.delete-user-btn', function () {
            let userId = $(this).attr('data-userid');
            $('#deleteUserId').val(userId);
        });
    });
</script>
    @* function showEditModal(userId, username, email) {
        document.getElementById('editUserId').value = userId;
        document.getElementById('editUsername').value = username;
        document.getElementById('editEmail').value = email;
        $('#editUserModal').modal('show');
    }


    $(document).ready(function () {
        $('body').on('click', '.btn-danger.btn-small[data-bs-target="#deleteUserModal"]', function () {
            let userId = $(this).attr('data-userid'); // Берём UserID из атрибута кнопки
            $('#deleteUserId').val(userId);           // Устанавливаем его в hidden поле формы
        });
    });


    // Инициализация модальных окон
    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(button => {
        button.addEventListener('click', function() {
            const modalId = this.getAttribute('data-bs-target');
            const id = this.getAttribute('data-id');

            if (id) {
                // Загрузка данных для редактирования
                fetch(`/Admin/Get${modalId.replace('#', '').replace('Modal', '')}?id=${id}`)
                    .then(response => response.json())
                    .then(data => {
                        // Заполнение формы данными
                        const modal = document.querySelector(modalId);
                        Object.keys(data).forEach(key => {
                            const input = modal.querySelector(`[name="${key}"]`);
                            if (input) {
                                input.value = data[key];
                            }
                        });
                    });
            }
        });
    }); *@
